[
    {
        "keys": ["ctrl+'"],
        "command": "show_panel",
        "args": {
            "panel": "console",
            "toggle": true
        }
    },
    {
        "keys": ["shift+alt+up"],
        "command": "select_lines",
        "args": {
            "forward": false
        }
    },
    {
        "keys": ["shift+alt+down"],
        "command": "select_lines",
        "args": {
            "forward": true
        }
    },
    {
        "keys": ["pause"],
        "command": "exec",
        "args": {
            "kill": true
        }
    },
    {
        "keys": ["ctrl+f7"],
        "command": "show_panel",
        "args": {
            "panel": "output.exec"
        }
    },
    {
        "_comment": "Capitalize word",
        "keys": ["ctrl+k", "ctrl+h"],
        "command": "title_case"
    },
    {
        "keys": ["ctrl+k", "ctrl+n"],
        "command": "fold"
    },
    {
        "keys": ["ctrl+k", "ctrl+m"],
        "command": "unfold"
    },
    {
        "keys": ["ctrl+k", "ctrl+,"],
        "command": "prompt_fold_level"
    },
    {
        "keys": ["ctrl+k", "ctrl+."],
        "command": "prompt_indent_tab_size"
    },
    {
        "keys": ["ctrl+alt+f"],
        "command": "js_format",
        "context": [{
                "key": "selector", "operator": "equal", "operand": "source.javascript"
            }]
    },
    {
        "keys": ["ctrl+alt+j"],
        "command": "pretty_json"
    },
    {
        "keys": ["ctrl+alt+m"],
        "command": "un_pretty_json"
    },
    {
        "_comment": "BracketHighlighter: Go to left bracket",
        "keys": ["ctrl+.", "ctrl+up"],
        "command": "bh_key",
        "args": {
            "no_outside_adj": null,
            "no_block_mode": null,
            "lines": true,
            "plugin": {
                "type": ["__all__"],
                "command": "bh_modules.bracketselect",
                "args": {
                    "select": "left"
                }
            }
        }
    },
    {
        "_comment": "BracketHighlighter: Go to right bracket",
        "keys": ["ctrl+.", "ctrl+down"],
        "command": "bh_key",
        "args": {
            "no_outside_adj": null,
            "no_block_mode": null,
            "lines": true,
            "plugin": {
                "type": ["__all__"],
                "command": "bh_modules.bracketselect",
                "args": {
                    "select": "right"
                }
            }
        }
    },
    {
        "_comment": "BracketHighlighter: Select the attribute to the right of the cursor (will wrap inside the tag)",
        "keys": ["ctrl+.", "ctrl+right"],
        "command": "bh_key",
        "args":
        {
            "plugin":
            {
                "type": ["cfml", "html", "angle"],
                "command": "bh_modules.tagattrselect",
                "args": {"direction": "right"}
            }
        }
    },
    {
        "_comment": "BracketHighlighter: Select the attribute to the left of the cursor (will wrap inside the tag)",
        "keys": ["ctrl+.", "ctrl+left"],
        "command": "bh_key",
        "args":
        {
            "plugin":
            {
                "type": ["cfml", "html", "angle"],
                "command": "bh_modules.tagattrselect",
                "args": {"direction": "left"}
            }
        }
    },
    {
        "_comment": "BracketHighlighter: Select tag name of HTML/XML tag (both opening name and closing)",
        "keys": ["ctrl+.", "ctrl+t"],
        "command": "bh_key",
        "args": {
            "plugin": {
                "type": ["cfml", "html", "angle"],
                "command": "bh_modules.tagnameselect"
            }
        }
    },
    {
        "_comment": "BracketHighlighter: Convert single quote string to double quoted string and vice versa. Will handle escaping or unescaping quotes within the string",
        "keys": ["ctrl+.", "ctrl+q"],
        "command": "bh_key",
        "args": {
            "lines": true,
            "plugin": {
                "type": ["single_quote", "double_quote", "py_single_quote", "py_double_quote"],
                "command": "bh_modules.swapquotes"
            }
        }
    },
    {
        "_comment": "BracketHighlighter: Select text between brackets",
        "no_outside_adj": null,
        "keys": ["ctrl+.", "ctrl+s"],
        "command": "bh_key",
        "args":
        {
            "lines" : true,
            "plugin":
            {
                "type": ["__all__"],
                "command": "bh_modules.bracketselect"
            }
        }
    },
    {
        "_comment": "BracketHighlighter: Fold contents between brackets",
        "keys": ["ctrl+.", "ctrl+f"],
        "command": "bh_key",
        "args": {
            "plugin": {
                "type": ["__all__"],
                "command": "bh_modules.foldbracket"
            }
        }
    },
    {
        "_comment": "BracketHighlighter: Swap brackets with another type",
        "keys": ["ctrl+.", "ctrl+e"],
        "command": "swap_brackets"
    },
    {
        "keys": ["f7"],
        "command": "custom_build_system"
    },
    {
        "keys": ["ctrl+k", "ctrl+t"],
        "command": "toggle_setting",
        "args": {
            "setting": "word_wrap"
        },
    },
    {
        "keys": ["ctrl+k", "ctrl+p"],
        "command": "expand_selection",
        "args": {
            "to": "scope"
        },
    },
    {
        "keys": ["ctrl+k", "ctrl+f"],
        "command": "prompt_recent_file",
        "args": {
            "index": 0
        },
    },
]
